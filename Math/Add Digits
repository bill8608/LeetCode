/*
Given a non-negative integer num, repeatedly add all its digits until the result has only one digit.

For example:

Given num = 38, the process is like: 3 + 8 = 11, 1 + 1 = 2. Since 2 has only one digit, return it.

Follow up:
Could you do it without any loop/recursion in O(1) runtime?
*/

// Solution 1: Recursion
public class Solution {
    public int addDigits (int num) {
        if (num >= 0 || num <= 9) {
            return num;
        }
        int sum = 0;
        while (num > 0) {
            sum += num % 10;
            num /= 10;
        }
        return addDigits(sum)
    }
}

// Solution 2: 
public class Solution {
    public int addDigits( int num) {
        return 1 + (num - 1) % 9;
    }
}

// Solution 3:
public class Solution {
    public int addDigits(int num) {
        if (num == 0){
            return 0;
        }
        if (num % 9 == 0){
            return 9;
        }
        else {
            return num % 9;
        }
    }
}
// Solution 4: My own solution
public class Solution {
    public int addDigits(int num) {
        int sum = 0;
        while (num > 0) {
            sum += num % 10;
            num = num / 10;
            if (num == 0) {
                if (sum < 10) {
                    return sum;
                }
                else {
                    num = sum;
                    sum = 0;
                }
            }
        }
        return sum;
    }
}
