/*
Rotate an array of n elements to the right by k steps.

For example, with n = 7 and k = 3, the array [1,2,3,4,5,6,7] is rotated to [5,6,7,1,2,3,4].

Note:
Try to come up as many solutions as you can, there are at least 3 different ways to solve this problem.

[show hint]

Hint:
Could you do it in-place with O(1) extra space?
Related problem: Reverse Words in a String II

Credits:
Special thanks to @Freezen for adding this problem and creating all test cases.

Subscribe to see which companies asked this question
*/

/*Note:
consider if the k is greater than length of nums (k = k % len;)
*/
// consider if the k is greater than length of nums
public class Solution {
    public void rotate(int[] nums, int k) {
        int len = nums.length;
        if (len <= 1) {
            return;
        }
        //Reverse the whole array first;
        //Reverse the first k elments;
        //Reverse the following len-k elements.
        k = k % len;
        if (k > 0) {
            reverse (nums, 0, len-1);
            reverse (nums, 0, k-1);
            reverse (nums,k,len-1);
        }
    }        
    public static void reverse (int [] nums, int start, int end) {
        while (start < end) {
            int tmp = nums [start];
            nums [start] = nums [end];
            nums [end] = tmp;
            start++;
            end--;
        }
    }
}
